The test case for the 0-add_integer module
==========================================

the add_integer function sum two numbers(int or float) and return the sum in integer.

Usage
======

Importing the add int function from the module
    >>> add_integer = __import__('0-add_integer').add_integer    

Adding two positive numbers
    >>> add_integer(2, 3)
    5

Adding one positive and one negative numbers
    >>> add_integer(-2, 3)
    1

Adding two negative numbers
    >>> add_integer(-2, -3)
    -5

Adding zero and one positive number
    >>> add_integer(2, 0)
    2

Adding a float and int number
    >>> add_integer(2.1, 3)
    5

Only one positive number
    >>> add_integer(2)
    100

Only one negative number
    >>> add_integer(-2)
    96

Passing no argument
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding a string to a number
    >>> add_integer("a", 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding a number to a string
    >>> add_integer(3, "b")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Adding two strings
    >>> add_integer("Hello", "world")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding two list
    >>> add_integer(["Hello"], ["world"])
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding two tuple
    >>> add_integer(("Hello"), ("world"))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding a complex number
    >>> add_integer(float(2 +5j), 10)
    Traceback (most recent call last):
    ...
    TypeError: float() argument must be a string or a real number, not 'complex'

Passing a tuple
    >>> add_integer((1, 1))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding a infinity number
    >>> add_integer(float('inf'), 10)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Adding a NaN
    >>> add_integer(float('NaN'), 10)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer